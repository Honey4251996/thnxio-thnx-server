upstream puma-<%=fetch(:stage)%> {
  server unix:<%=fetch(:deploy_to)%>/shared/tmp/pids/puma.sock fail_timeout=0;
}

# Used for Target Group health checks for load balancer
server {
  server_name _;
  listen 1443;
  location / {
    access_log off;
    return  200;
  }
}

server {
  server_name <%= "#{fetch(:server_name)} *.#{fetch(:server_name)}" %>;
  listen 80;
  root <%= fetch(:deploy_to) %>/current/public;

  <% if fetch(:enable_force_https) %>
  listen 443;
  if ($http_x_forwarded_proto != 'https') {
    rewrite ^ https://$host$request_uri? permanent;
  }
  <% end %>

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
    add_header ETag "";
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS';
    add_header 'Access-Control-Allow-Headers' '*';
    add_header 'Access-Control-Max-Age' 3628800;
  }

  location ~* \.(eot|ttf|woff|woff2)$ {
    add_header Access-Control-Allow-Origin *;
  }

  try_files $uri/index.html $uri @puma;
  location @puma {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://puma-<%=fetch(:stage)%>;
  }

  if (-f /opt/maintenance.on) {
    return 503;
  }
  error_page 502 @maintenance;
  error_page 503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /maintenance.html break;
  }

  error_page 500 504 /500.html;

  client_max_body_size       50m;
  client_body_buffer_size    128k;

  proxy_connect_timeout      300s;
  proxy_send_timeout         300s;
  proxy_read_timeout         300s;

  proxy_buffer_size          4k;
  proxy_buffers              4 32k;
  proxy_busy_buffers_size    64k;
  proxy_temp_file_write_size 64k;

}
